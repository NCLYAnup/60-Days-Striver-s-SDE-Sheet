class Solution {
public:
 bool isPalindrome(string str, int s, int e) {
    while(s <= e) {
        if(str[s++] != str[e--]) {
            return false;
        }
    }
    return true;
}

void partIt(string str, int s, vector<string> &v, vector<vector<string>> &ans ) {
    if(s == str.length()) {
        ans.push_back(v);
        return;
    }
    
    for(int i = s; i < str.length(); i++) {
        if(isPalindrome(str, s, i)) {
            v.push_back(str.substr(s, i - s + 1));
            partIt(str, i + 1, v,ans);
            v.pop_back();
        }
    }
}

vector<vector<string>> partition(string s) {
    vector<vector<string>> ans;
    vector<string> v;
    partIt(s, 0, v,ans);
    return ans;
}
};
